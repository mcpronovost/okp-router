# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
## {%- if version %} [v{{ version }}] - {{ timestamp | date(format="%Y-%m-%d") }}\n{% else %} What's Changed\n{% endif -%}

{% for group, commits in commits | group_by(attribute="group") %}
  ### {{ group | upper_first }}
  {% for commit in commits %}
    {% if commit.remote.pr_title -%}
      {% set commit_message = commit.remote.pr_title -%}
    {% else -%}
      {% set commit_message = commit.message -%}
    {% endif -%}
    - {{ commit_message | split(pat="\n") | first | trim }}\
      {% if commit.remote.pr_number -%} in \
        [#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }}) \
      {%- endif -%}
  {% endfor %}
{% endfor %}

{%- if version -%}
    {% if previous.version %}
      **Full Changelog**: {{ self::remote_url() }}/compare/{{ previous.version }}...{{ version }}
    {% endif %}
{% else -%}
  {% raw %}\n{% endraw %}
{%- endif -%}

{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}
"""
# remove the leading and trailing whitespace from the template
trim = true
# template for the changelog header
header = """
# Changelog

All notable changes to this project will be documented in this file.\n
"""
# template for the changelog footer
footer = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

\n\n

---

### License

This project is licensed under the [BSD-3-Clause License](LICENSE).

### Contributing
We welcome contributions! Please check out our [Contributing Guide](CONTRIBUTING.md) for details on how you can help.

{{ self::remote_url() }}

Thanks :)
<!-- generated by git-cliff -->
"""
# postprocessors
postprocessors = []

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = false
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # remove issue numbers from commits
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "" },
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^[a|A]dd", group = "Added" },
    { message = "^[s|S]upport", group = "Added" },
    { message = "^[r|R]emove", group = "Removed" },
    { message = "^[r|R]efactor", group = "Refactored" },
    { message = "^Initial commit", group = "Initial" },
    { message = "^test", group = "Fixed" },
    { message = "^fix", group = "Fixed" },
    { message = "^update README", skip = true },
    { message = "^update documentation", skip = true },
    { message = "^update [0-9]+.[0-9]+.[0-9]+", skip = true },
    { message = "^update to [0-9]+.[0-9]+.[0-9]+", skip = true },
    { message = "^Update version to [0-9]+.[0-9]+.[0-9]+", skip = true },
    { message = "^.*", group = "Changed" },
]

# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
